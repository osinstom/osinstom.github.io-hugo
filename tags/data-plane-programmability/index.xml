<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data plane programmability on Tomasz Osiński - blog &amp; personal site</title>
    <link>https://osinstom.github.io/tags/data-plane-programmability/</link>
    <description>Recent content in Data plane programmability on Tomasz Osiński - blog &amp; personal site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>{year}</copyright>
    <lastBuildDate>Wed, 07 Aug 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://osinstom.github.io/tags/data-plane-programmability/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Implementing tunneling techniques in P4 based on the example of VXLAN</title>
      <link>https://osinstom.github.io/post/2019-10-26-implementing-tunneling-techniques-in-p4-based-on-the-example-of-vxlan/</link>
      <pubDate>Wed, 07 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://osinstom.github.io/post/2019-10-26-implementing-tunneling-techniques-in-p4-based-on-the-example-of-vxlan/</guid>
      <description>Introduction Recently, I started to implement the support for packet tunneling in our P4C-to-uBPF compiler. However, in order to deeply understand P4 constructs describing tunneling I have created the reference implementation of the VXLAN tunneling for BMv2 switch.
This blog post describes how to design and implement more complex tunneling technique (like VXLAN) in the P4 language. The source code is available on Github.
Short introduction to VXLAN The VXLAN (Virtual eXtensible Local Area Network) protocol has been standardized in RFC 7348 and is usually used to provide overlay communications between virtual machines in the multi-tenant virtualized data center.</description>
    </item>
    
  </channel>
</rss>